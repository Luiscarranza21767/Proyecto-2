

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 03 23:59:26 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000E                     	;# 
    69     000F                     	;# 
    70     0010                     	;# 
    71     0011                     	;# 
    72     0012                     	;# 
    73     0013                     	;# 
    74     0014                     	;# 
    75     0015                     	;# 
    76     0015                     	;# 
    77     0016                     	;# 
    78     0017                     	;# 
    79     0018                     	;# 
    80     0019                     	;# 
    81     001A                     	;# 
    82     001B                     	;# 
    83     001B                     	;# 
    84     001C                     	;# 
    85     001D                     	;# 
    86     001E                     	;# 
    87     001F                     	;# 
    88     0081                     	;# 
    89     0085                     	;# 
    90     0086                     	;# 
    91     0087                     	;# 
    92     0088                     	;# 
    93     0089                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     0105                     	;# 
   117     0107                     	;# 
   118     0108                     	;# 
   119     0109                     	;# 
   120     010C                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     0185                     	;# 
   126     0187                     	;# 
   127     0188                     	;# 
   128     0189                     	;# 
   129     018C                     	;# 
   130     018D                     	;# 
   131     0000                     	;# 
   132     0001                     	;# 
   133     0002                     	;# 
   134     0003                     	;# 
   135     0004                     	;# 
   136     0005                     	;# 
   137     0006                     	;# 
   138     0007                     	;# 
   139     0008                     	;# 
   140     0009                     	;# 
   141     000A                     	;# 
   142     000B                     	;# 
   143     000C                     	;# 
   144     000D                     	;# 
   145     000E                     	;# 
   146     000E                     	;# 
   147     000F                     	;# 
   148     0010                     	;# 
   149     0011                     	;# 
   150     0012                     	;# 
   151     0013                     	;# 
   152     0014                     	;# 
   153     0015                     	;# 
   154     0015                     	;# 
   155     0016                     	;# 
   156     0017                     	;# 
   157     0018                     	;# 
   158     0019                     	;# 
   159     001A                     	;# 
   160     001B                     	;# 
   161     001B                     	;# 
   162     001C                     	;# 
   163     001D                     	;# 
   164     001E                     	;# 
   165     001F                     	;# 
   166     0081                     	;# 
   167     0085                     	;# 
   168     0086                     	;# 
   169     0087                     	;# 
   170     0088                     	;# 
   171     0089                     	;# 
   172     008C                     	;# 
   173     008D                     	;# 
   174     008E                     	;# 
   175     008F                     	;# 
   176     0090                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0093                     	;# 
   182     0094                     	;# 
   183     0095                     	;# 
   184     0096                     	;# 
   185     0097                     	;# 
   186     0098                     	;# 
   187     0099                     	;# 
   188     009A                     	;# 
   189     009B                     	;# 
   190     009C                     	;# 
   191     009D                     	;# 
   192     009E                     	;# 
   193     009F                     	;# 
   194     0105                     	;# 
   195     0107                     	;# 
   196     0108                     	;# 
   197     0109                     	;# 
   198     010C                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     0185                     	;# 
   204     0187                     	;# 
   205     0188                     	;# 
   206     0189                     	;# 
   207     018C                     	;# 
   208     018D                     	;# 
   209     0000                     	;# 
   210     0001                     	;# 
   211     0002                     	;# 
   212     0003                     	;# 
   213     0004                     	;# 
   214     0005                     	;# 
   215     0006                     	;# 
   216     0007                     	;# 
   217     0008                     	;# 
   218     0009                     	;# 
   219     000A                     	;# 
   220     000B                     	;# 
   221     000C                     	;# 
   222     000D                     	;# 
   223     000E                     	;# 
   224     000E                     	;# 
   225     000F                     	;# 
   226     0010                     	;# 
   227     0011                     	;# 
   228     0012                     	;# 
   229     0013                     	;# 
   230     0014                     	;# 
   231     0015                     	;# 
   232     0015                     	;# 
   233     0016                     	;# 
   234     0017                     	;# 
   235     0018                     	;# 
   236     0019                     	;# 
   237     001A                     	;# 
   238     001B                     	;# 
   239     001B                     	;# 
   240     001C                     	;# 
   241     001D                     	;# 
   242     001E                     	;# 
   243     001F                     	;# 
   244     0081                     	;# 
   245     0085                     	;# 
   246     0086                     	;# 
   247     0087                     	;# 
   248     0088                     	;# 
   249     0089                     	;# 
   250     008C                     	;# 
   251     008D                     	;# 
   252     008E                     	;# 
   253     008F                     	;# 
   254     0090                     	;# 
   255     0091                     	;# 
   256     0092                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0093                     	;# 
   260     0094                     	;# 
   261     0095                     	;# 
   262     0096                     	;# 
   263     0097                     	;# 
   264     0098                     	;# 
   265     0099                     	;# 
   266     009A                     	;# 
   267     009B                     	;# 
   268     009C                     	;# 
   269     009D                     	;# 
   270     009E                     	;# 
   271     009F                     	;# 
   272     0105                     	;# 
   273     0107                     	;# 
   274     0108                     	;# 
   275     0109                     	;# 
   276     010C                     	;# 
   277     010C                     	;# 
   278     010D                     	;# 
   279     010E                     	;# 
   280     010F                     	;# 
   281     0185                     	;# 
   282     0187                     	;# 
   283     0188                     	;# 
   284     0189                     	;# 
   285     018C                     	;# 
   286     018D                     	;# 
   287     0019                     _TXREG	set	25
   288     001A                     _RCREG	set	26
   289     000B                     _INTCONbits	set	11
   290     0018                     _RCSTAbits	set	24
   291     0008                     _PORTD	set	8
   292     0006                     _PORTB	set	6
   293     0005                     _PORTA	set	5
   294     000C                     _PIR1bits	set	12
   295     0005                     _PORTAbits	set	5
   296     0006                     _PORTBbits	set	6
   297     0058                     _RBIF	set	88
   298     008F                     _OSCCONbits	set	143
   299     0081                     _OPTION_REGbits	set	129
   300     0095                     _WPUB	set	149
   301     0096                     _IOCB	set	150
   302     0098                     _TXSTAbits	set	152
   303     0099                     _SPBRG	set	153
   304     0088                     _TRISD	set	136
   305     0086                     _TRISB	set	134
   306     0085                     _TRISA	set	133
   307     0189                     _ANSELH	set	393
   308     0188                     _ANSEL	set	392
   309                           
   310                           	psect	cinit
   311     000F                     start_initialization:	
   312                           ; #config settings
   313                           
   314     000F                     __initialization:
   315     000F                     end_of_initialization:	
   316                           ;End of C runtime variable initialization code
   317                           
   318     000F                     __end_of__initialization:
   319     000F  0183               	clrf	3
   320     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   321                           
   322                           	psect	cstackCOMMON
   323     0070                     __pcstackCOMMON:
   324     0070                     ?_setup:
   325     0070                     ?_setupINTOSC:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_initUART:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?_setup_portb:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_ComSerial:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_isr:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ??_isr:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348     0070                     	ds	4
   349     0074                     ??_setup:
   350     0074                     ??_setupINTOSC:	
   351                           ; 1 bytes @ 0x4
   352                           
   353     0074                     ??_initUART:	
   354                           ; 1 bytes @ 0x4
   355                           
   356     0074                     ??_setup_portb:	
   357                           ; 1 bytes @ 0x4
   358                           
   359     0074                     ??_ComSerial:	
   360                           ; 1 bytes @ 0x4
   361                           
   362     0074                     setupINTOSC@IRCF:	
   363                           ; 1 bytes @ 0x4
   364                           
   365                           
   366                           ; 1 bytes @ 0x4
   367     0074                     	ds	1
   368     0075                     ??_main:
   369                           
   370                           ; 1 bytes @ 0x5
   371     0075                     	ds	3
   372                           
   373                           	psect	maintext
   374     0013                     __pmaintext:	
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 72 in file "main.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, pclath, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : B00/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          3       0       0       0       0
   397 ;;      Totals:         3       0       0       0       0
   398 ;;Total ram usage:        3 bytes
   399 ;; Hardware stack levels required when called: 2
   400 ;; This function calls:
   401 ;;		_ComSerial
   402 ;;		_initUART
   403 ;;		_setup
   404 ;;		_setupINTOSC
   405 ;;		_setup_portb
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411     0013                     _main:	
   412                           ;psect for function _main
   413                           
   414     0013                     l743:	
   415                           ;incstack = 0
   416                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   417                           
   418                           
   419                           ;main.c: 73:     setup();
   420     0013  120A  118A  2083  120A  118A  	fcall	_setup
   421                           
   422                           ;main.c: 74:     setupINTOSC(7);
   423     0018  3007               	movlw	7
   424     0019  120A  118A  2068  120A  118A  	fcall	_setupINTOSC
   425                           
   426                           ;main.c: 75:     initUART();
   427     001E  120A  118A  20AF  120A  118A  	fcall	_initUART
   428                           
   429                           ;main.c: 76:     setup_portb();
   430     0023  120A  118A  20BF  120A  118A  	fcall	_setup_portb
   431     0028                     l745:
   432                           
   433                           ;main.c: 79:         if (PIR1bits.RCIF == 1){
   434     0028  1283               	bcf	3,5	;RP0=0, select bank0
   435     0029  1303               	bcf	3,6	;RP1=0, select bank0
   436     002A  1E8C               	btfss	12,5	;volatile
   437     002B  282D               	goto	u81
   438     002C  282E               	goto	u80
   439     002D                     u81:
   440     002D  2833               	goto	l749
   441     002E                     u80:
   442     002E                     l747:
   443                           
   444                           ;main.c: 80:             ComSerial();
   445     002E  120A  118A  209B  120A  118A  	fcall	_ComSerial
   446     0033                     l749:
   447                           
   448                           ;main.c: 82:         _delay((unsigned long)((100)*(8000000/4000.0)));
   449     0033  3002               	movlw	2
   450     0034  00F7               	movwf	??_main+2
   451     0035  3004               	movlw	4
   452     0036  00F6               	movwf	??_main+1
   453     0037  30BA               	movlw	186
   454     0038  00F5               	movwf	??_main
   455     0039                     u97:
   456     0039  0BF5               	decfsz	??_main,f
   457     003A  2839               	goto	u97
   458     003B  0BF6               	decfsz	??_main+1,f
   459     003C  2839               	goto	u97
   460     003D  0BF7               	decfsz	??_main+2,f
   461     003E  2839               	goto	u97
   462     003F  0000               	nop
   463     0040  2828               	goto	l745
   464     0041  120A  118A  280C   	ljmp	start
   465     0044                     __end_of_main:
   466                           
   467                           	psect	text1
   468     00BF                     __ptext1:	
   469 ;; *************** function _setup_portb *****************
   470 ;; Defined at:
   471 ;;		line 117 in file "main.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used: 1
   491 ;; Hardware stack levels required when called: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499     00BF                     _setup_portb:	
   500                           ;psect for function _setup_portb
   501                           
   502     00BF                     l715:	
   503                           ;incstack = 0
   504                           ; Regs used in _setup_portb: [wreg]
   505                           
   506                           
   507                           ;main.c: 118:     INTCONbits.GIE = 1;
   508     00BF  178B               	bsf	11,7	;volatile
   509                           
   510                           ;main.c: 119:     INTCONbits.RBIE = 1;
   511     00C0  158B               	bsf	11,3	;volatile
   512                           
   513                           ;main.c: 120:     INTCONbits.RBIF = 0;
   514     00C1  100B               	bcf	11,0	;volatile
   515     00C2                     l717:
   516                           
   517                           ;main.c: 121:     IOCB = 0b11000000;
   518     00C2  30C0               	movlw	192
   519     00C3  1683               	bsf	3,5	;RP0=1, select bank1
   520     00C4  1303               	bcf	3,6	;RP1=0, select bank1
   521     00C5  0096               	movwf	22	;volatile
   522                           
   523                           ;main.c: 122:     WPUB = 0b11000000;
   524     00C6  30C0               	movlw	192
   525     00C7  0095               	movwf	21	;volatile
   526     00C8                     l719:
   527                           
   528                           ;main.c: 123:     OPTION_REGbits.nRBPU = 0;
   529     00C8  1381               	bcf	1,7	;volatile
   530     00C9                     l81:
   531     00C9  0008               	return
   532     00CA                     __end_of_setup_portb:
   533                           
   534                           	psect	text2
   535     0068                     __ptext2:	
   536 ;; *************** function _setupINTOSC *****************
   537 ;; Defined at:
   538 ;;		line 10 in file "oscilador.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  IRCF            1    wreg     unsigned char 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  IRCF            1    4[COMMON] unsigned char 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         1       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0
   555 ;;      Totals:         1       0       0       0       0
   556 ;;Total ram usage:        1 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; Hardware stack levels required when called: 1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566     0068                     _setupINTOSC:	
   567                           ;psect for function _setupINTOSC
   568                           
   569                           
   570                           ;incstack = 0
   571                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
   572                           ;setupINTOSC@IRCF stored from wreg
   573     0068  00F4               	movwf	setupINTOSC@IRCF
   574     0069                     l695:
   575                           
   576                           ;oscilador.c: 11:     if (IRCF == 7){
   577     0069  3007               	movlw	7
   578     006A  0674               	xorwf	setupINTOSC@IRCF,w
   579     006B  1D03               	btfss	3,2
   580     006C  286E               	goto	u11
   581     006D  286F               	goto	u10
   582     006E                     u11:
   583     006E  2873               	goto	l91
   584     006F                     u10:
   585     006F                     l697:
   586                           
   587                           ;oscilador.c: 12:         OSCCONbits.IRCF = 0b111;
   588     006F  3070               	movlw	112
   589     0070  1683               	bsf	3,5	;RP0=1, select bank1
   590     0071  1303               	bcf	3,6	;RP1=0, select bank1
   591     0072  048F               	iorwf	15,f	;volatile
   592     0073                     l91:	
   593                           ;oscilador.c: 13:     }
   594                           
   595                           
   596                           ;oscilador.c: 14:     if (IRCF == 6){
   597     0073  3006               	movlw	6
   598     0074  0674               	xorwf	setupINTOSC@IRCF,w
   599     0075  1D03               	btfss	3,2
   600     0076  2878               	goto	u21
   601     0077  2879               	goto	u20
   602     0078                     u21:
   603     0078  287F               	goto	l701
   604     0079                     u20:
   605     0079                     l699:
   606                           
   607                           ;oscilador.c: 15:         OSCCONbits.IRCF = 0b110;
   608     0079  1683               	bsf	3,5	;RP0=1, select bank1
   609     007A  1303               	bcf	3,6	;RP1=0, select bank1
   610     007B  080F               	movf	15,w	;volatile
   611     007C  398F               	andlw	-113
   612     007D  3860               	iorlw	96
   613     007E  008F               	movwf	15	;volatile
   614     007F                     l701:
   615                           
   616                           ;oscilador.c: 17:     OSCCONbits.SCS = 1;
   617     007F  1683               	bsf	3,5	;RP0=1, select bank1
   618     0080  1303               	bcf	3,6	;RP1=0, select bank1
   619     0081  140F               	bsf	15,0	;volatile
   620     0082                     l93:
   621     0082  0008               	return
   622     0083                     __end_of_setupINTOSC:
   623                           
   624                           	psect	text3
   625     0083                     __ptext3:	
   626 ;; *************** function _setup *****************
   627 ;; Defined at:
   628 ;;		line 88 in file "main.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656     0083                     _setup:	
   657                           ;psect for function _setup
   658                           
   659     0083                     l685:	
   660                           ;incstack = 0
   661                           ; Regs used in _setup: [wreg+status,2]
   662                           
   663                           
   664                           ;main.c: 89:     ANSEL = 0;
   665     0083  1683               	bsf	3,5	;RP0=1, select bank3
   666     0084  1703               	bsf	3,6	;RP1=1, select bank3
   667     0085  0188               	clrf	8	;volatile
   668                           
   669                           ;main.c: 90:     ANSELH = 0;
   670     0086  0189               	clrf	9	;volatile
   671                           
   672                           ;main.c: 92:     TRISA = 0;
   673     0087  1683               	bsf	3,5	;RP0=1, select bank1
   674     0088  1303               	bcf	3,6	;RP1=0, select bank1
   675     0089  0185               	clrf	5	;volatile
   676                           
   677                           ;main.c: 93:     PORTA = 0;
   678     008A  1283               	bcf	3,5	;RP0=0, select bank0
   679     008B  1303               	bcf	3,6	;RP1=0, select bank0
   680     008C  0185               	clrf	5	;volatile
   681     008D                     l687:
   682                           
   683                           ;main.c: 94:     TRISB = 0b11000000;
   684     008D  30C0               	movlw	192
   685     008E  1683               	bsf	3,5	;RP0=1, select bank1
   686     008F  1303               	bcf	3,6	;RP1=0, select bank1
   687     0090  0086               	movwf	6	;volatile
   688     0091                     l689:
   689                           
   690                           ;main.c: 95:     PORTB = 0;
   691     0091  1283               	bcf	3,5	;RP0=0, select bank0
   692     0092  1303               	bcf	3,6	;RP1=0, select bank0
   693     0093  0186               	clrf	6	;volatile
   694     0094                     l691:
   695                           
   696                           ;main.c: 96:     TRISD = 0;
   697     0094  1683               	bsf	3,5	;RP0=1, select bank1
   698     0095  1303               	bcf	3,6	;RP1=0, select bank1
   699     0096  0188               	clrf	8	;volatile
   700     0097                     l693:
   701                           
   702                           ;main.c: 97:     PORTD = 0;
   703     0097  1283               	bcf	3,5	;RP0=0, select bank0
   704     0098  1303               	bcf	3,6	;RP1=0, select bank0
   705     0099  0188               	clrf	8	;volatile
   706     009A                     l75:
   707     009A  0008               	return
   708     009B                     __end_of_setup:
   709                           
   710                           	psect	text4
   711     00AF                     __ptext4:	
   712 ;; *************** function _initUART *****************
   713 ;; Defined at:
   714 ;;		line 102 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742     00AF                     _initUART:	
   743                           ;psect for function _initUART
   744                           
   745     00AF                     l703:	
   746                           ;incstack = 0
   747                           ; Regs used in _initUART: [wreg]
   748                           
   749                           
   750                           ;main.c: 104:     SPBRG = 12;
   751     00AF  300C               	movlw	12
   752     00B0  1683               	bsf	3,5	;RP0=1, select bank1
   753     00B1  1303               	bcf	3,6	;RP1=0, select bank1
   754     00B2  0099               	movwf	25	;volatile
   755     00B3                     l705:
   756                           
   757                           ;main.c: 106:     TXSTAbits.SYNC = 0;
   758     00B3  1218               	bcf	24,4	;volatile
   759     00B4                     l707:
   760                           
   761                           ;main.c: 107:     RCSTAbits.SPEN = 1;
   762     00B4  1283               	bcf	3,5	;RP0=0, select bank0
   763     00B5  1303               	bcf	3,6	;RP1=0, select bank0
   764     00B6  1798               	bsf	24,7	;volatile
   765     00B7                     l709:
   766                           
   767                           ;main.c: 109:     TXSTAbits.TXEN = 1;
   768     00B7  1683               	bsf	3,5	;RP0=1, select bank1
   769     00B8  1303               	bcf	3,6	;RP1=0, select bank1
   770     00B9  1698               	bsf	24,5	;volatile
   771     00BA                     l711:
   772                           
   773                           ;main.c: 110:     PIR1bits.TXIF = 0;
   774     00BA  1283               	bcf	3,5	;RP0=0, select bank0
   775     00BB  1303               	bcf	3,6	;RP1=0, select bank0
   776     00BC  120C               	bcf	12,4	;volatile
   777     00BD                     l713:
   778                           
   779                           ;main.c: 112:     RCSTAbits.CREN = 1;
   780     00BD  1618               	bsf	24,4	;volatile
   781     00BE                     l78:
   782     00BE  0008               	return
   783     00BF                     __end_of_initUART:
   784                           
   785                           	psect	text5
   786     009B                     __ptext5:	
   787 ;; *************** function _ComSerial *****************
   788 ;; Defined at:
   789 ;;		line 128 in file "main.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817     009B                     _ComSerial:	
   818                           ;psect for function _ComSerial
   819                           
   820     009B                     l721:	
   821                           ;incstack = 0
   822                           ; Regs used in _ComSerial: [wreg+status,2+status,0]
   823                           
   824                           
   825                           ;main.c: 129:     if (RCREG == 0b00110001){
   826     009B  3031               	movlw	49
   827     009C  1283               	bcf	3,5	;RP0=0, select bank0
   828     009D  1303               	bcf	3,6	;RP1=0, select bank0
   829     009E  061A               	xorwf	26,w	;volatile
   830     009F  1D03               	btfss	3,2
   831     00A0  28A2               	goto	u31
   832     00A1  28A3               	goto	u30
   833     00A2                     u31:
   834     00A2  28A4               	goto	l725
   835     00A3                     u30:
   836     00A3                     l723:
   837                           
   838                           ;main.c: 130:         PORTAbits.RA0 = 1;
   839     00A3  1405               	bsf	5,0	;volatile
   840     00A4                     l725:
   841                           
   842                           ;main.c: 132:     if (RCREG == 0b00110010){
   843     00A4  3032               	movlw	50
   844     00A5  061A               	xorwf	26,w	;volatile
   845     00A6  1D03               	btfss	3,2
   846     00A7  28A9               	goto	u41
   847     00A8  28AA               	goto	u40
   848     00A9                     u41:
   849     00A9  28AB               	goto	l729
   850     00AA                     u40:
   851     00AA                     l727:
   852                           
   853                           ;main.c: 133:         PORTAbits.RA0 = 0;
   854     00AA  1005               	bcf	5,0	;volatile
   855     00AB                     l729:
   856                           
   857                           ;main.c: 135:     TXREG = RCREG;
   858     00AB  081A               	movf	26,w	;volatile
   859     00AC  0099               	movwf	25	;volatile
   860     00AD                     l731:
   861                           
   862                           ;main.c: 136:     PIR1bits.RCIF = 0;
   863     00AD  128C               	bcf	12,5	;volatile
   864     00AE                     l86:
   865     00AE  0008               	return
   866     00AF                     __end_of_ComSerial:
   867                           
   868                           	psect	text6
   869     0044                     __ptext6:	
   870 ;; *************** function _isr *****************
   871 ;; Defined at:
   872 ;;		line 54 in file "main.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   886 ;;      Params:         0       0       0       0       0
   887 ;;      Locals:         0       0       0       0       0
   888 ;;      Temps:          4       0       0       0       0
   889 ;;      Totals:         4       0       0       0       0
   890 ;;Total ram usage:        4 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		Interrupt level 1
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899     0044                     _isr:	
   900                           ;psect for function _isr
   901                           
   902     0044                     i1l733:
   903                           
   904                           ;main.c: 55:     if (RBIF == 1){
   905     0044  1C0B               	btfss	11,0	;volatile
   906     0045  2847               	goto	u5_21
   907     0046  2848               	goto	u5_20
   908     0047                     u5_21:
   909     0047  2861               	goto	i1l63
   910     0048                     u5_20:
   911     0048                     i1l735:
   912                           
   913                           ;main.c: 56:     if (PORTBbits.RB7 == 0)
   914     0048  1283               	bcf	3,5	;RP0=0, select bank0
   915     0049  1303               	bcf	3,6	;RP1=0, select bank0
   916     004A  1B86               	btfsc	6,7	;volatile
   917     004B  284D               	goto	u6_21
   918     004C  284E               	goto	u6_20
   919     004D                     u6_21:
   920     004D  2860               	goto	i1l60
   921     004E                     u6_20:
   922     004E                     i1l737:
   923                           
   924                           ;main.c: 57:     {;main.c: 58:         _delay((unsigned long)((50)*(8000000/4000.0)));
   925     004E  3082               	movlw	130
   926     004F  00F1               	movwf	??_isr+1
   927     0050  30DD               	movlw	221
   928     0051  00F0               	movwf	??_isr
   929     0052                     u10_27:
   930     0052  0BF0               	decfsz	??_isr,f
   931     0053  2852               	goto	u10_27
   932     0054  0BF1               	decfsz	??_isr+1,f
   933     0055  2852               	goto	u10_27
   934     0056  2857               	nop2
   935     0057                     i1l739:
   936                           
   937                           ;main.c: 59:         if (PORTAbits.RA1 == 0){
   938     0057  1283               	bcf	3,5	;RP0=0, select bank0
   939     0058  1303               	bcf	3,6	;RP1=0, select bank0
   940     0059  1885               	btfsc	5,1	;volatile
   941     005A  285C               	goto	u7_21
   942     005B  285D               	goto	u7_20
   943     005C                     u7_21:
   944     005C  285F               	goto	i1l61
   945     005D                     u7_20:
   946     005D                     i1l741:
   947                           
   948                           ;main.c: 60:             PORTAbits.RA1 = 1;
   949     005D  1485               	bsf	5,1	;volatile
   950                           
   951                           ;main.c: 61:         }
   952     005E  2860               	goto	i1l60
   953     005F                     i1l61:	
   954                           ;main.c: 62:         else {
   955                           
   956                           
   957                           ;main.c: 63:             PORTAbits.RA1 = 0;
   958     005F  1085               	bcf	5,1	;volatile
   959     0060                     i1l60:	
   960                           ;main.c: 65:     }
   961                           
   962                           
   963                           ;main.c: 66:     RBIF = 0;
   964     0060  100B               	bcf	11,0	;volatile
   965     0061                     i1l63:
   966     0061  0873               	movf	??_isr+3,w
   967     0062  008A               	movwf	10
   968     0063  0E72               	swapf	??_isr+2,w
   969     0064  0083               	movwf	3
   970     0065  0EFE               	swapf	btemp,f
   971     0066  0E7E               	swapf	btemp,w
   972     0067  0009               	retfie
   973     0068                     __end_of_isr:
   974     007E                     btemp	set	126	;btemp
   975     007E                     wtemp0	set	126
   976                           
   977                           	psect	intentry
   978     0004                     __pintentry:	
   979                           ;incstack = 0
   980                           ; Regs used in _isr: [wreg]
   981                           
   982     0004                     interrupt_function:
   983     007E                     saved_w	set	btemp
   984     0004  00FE               	movwf	btemp
   985     0005  0E03               	swapf	3,w
   986     0006  00F2               	movwf	??_isr+2
   987     0007  080A               	movf	10,w
   988     0008  00F3               	movwf	??_isr+3
   989     0009  120A  118A  2844   	ljmp	_isr
   990                           
   991                           	psect	idloc
   992                           
   993                           ;Config register IDLOC0 @ 0x2000
   994                           ;	unspecified, using default values
   995     2000                     	org	8192
   996     2000  3FFF               	dw	16383
   997                           
   998                           ;Config register IDLOC1 @ 0x2001
   999                           ;	unspecified, using default values
  1000     2001                     	org	8193
  1001     2001  3FFF               	dw	16383
  1002                           
  1003                           ;Config register IDLOC2 @ 0x2002
  1004                           ;	unspecified, using default values
  1005     2002                     	org	8194
  1006     2002  3FFF               	dw	16383
  1007                           
  1008                           ;Config register IDLOC3 @ 0x2003
  1009                           ;	unspecified, using default values
  1010     2003                     	org	8195
  1011     2003  3FFF               	dw	16383
  1012                           
  1013                           	psect	config
  1014                           
  1015                           ;Config register CONFIG1 @ 0x2007
  1016                           ;	Oscillator Selection bits
  1017                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1018                           ;	Watchdog Timer Enable bit
  1019                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1020                           ;	Power-up Timer Enable bit
  1021                           ;	PWRTE = OFF, PWRT disabled
  1022                           ;	RE3/MCLR pin function select bit
  1023                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1024                           ;	Code Protection bit
  1025                           ;	CP = OFF, Program memory code protection is disabled
  1026                           ;	Data Code Protection bit
  1027                           ;	CPD = OFF, Data memory code protection is disabled
  1028                           ;	Brown Out Reset Selection bits
  1029                           ;	BOREN = OFF, BOR disabled
  1030                           ;	Internal External Switchover bit
  1031                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1032                           ;	Fail-Safe Clock Monitor Enabled bit
  1033                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1034                           ;	Low Voltage Programming Enable bit
  1035                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1036                           ;	In-Circuit Debugger Mode bit
  1037                           ;	DEBUG = 0x1, unprogramme  1038     2007                     	org	8199
  1039     2007  20D4               	dw	8404
  1040                           
  1041                           ;Config register CONFIG2 @ 0x2008
  1042                           ;	Brown-out Reset Selection bit
  1043                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1044                           ;	Flash Program Memory Self Write Enable bits
  1045                           ;	WRT = OFF, Write protection off
  1046     2008                     	org	8200
  1047     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setupINTOSC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              5 COMMON     3     3      0
                          _ComSerial
                           _initUART
                              _setup
                        _setupINTOSC
                        _setup_portb
 ---------------------------------------------------------------------------------
 (1) _setup_portb                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupINTOSC                                          1     1      0      30
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ComSerial                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ComSerial
   _initUART
   _setup
   _setupINTOSC
   _setup_portb

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 03 23:59:26 2022

                     l81 00C9                       l75 009A                       l91 0073  
                     l93 0082                       l86 00AE                       l78 00BE  
                     u10 006F                       u11 006E                       u20 0079  
                     u21 0078                       u30 00A3                       u31 00A2  
                     u40 00AA                       u41 00A9                       u80 002E  
                     u81 002D                       u97 0039                      l701 007F  
                    l711 00BA                      l703 00AF                      l721 009B  
                    l713 00BD                      l705 00B3                      l731 00AD  
                    l723 00A3                      l707 00B4                      l715 00BF  
                    l725 00A4                      l709 00B7                      l717 00C2  
                    l727 00AA                      l719 00C8                      l743 0013  
                    l729 00AB                      l745 0028                      l691 0094  
                    l747 002E                      l693 0097                      l685 0083  
                    l749 0033                      l687 008D                      l695 0069  
                    l689 0091                      l697 006F                      l699 0079  
                    _isr 0044                     ?_isr 0070                     _IOCB 0096  
                   _RBIF 0058                     i1l60 0060                     i1l61 005F  
                   i1l63 0061                     _WPUB 0095                     u5_20 0048  
                   u5_21 0047                     u6_20 004E                     u6_21 004D  
                   u7_20 005D                     u7_21 005C                     _main 0013  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l741 005D  
                  i1l733 0044                    i1l735 0048                    i1l737 004E  
                  i1l739 0057                    _RCREG 001A                    u10_27 0052  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TXREG 0019                    _setup 0083  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0044                   ??_main 0075  
                 ?_setup 0070                   _ANSELH 0189         __end_of_initUART 00BF  
           ?_setupINTOSC 0070                   saved_w 007E             ?_setup_portb 0070  
__end_of__initialization 000F        __end_of_ComSerial 00AF           __pcstackCOMMON 0070  
          __end_of_setup 009B           _OPTION_REGbits 0081                  ??_setup 0074  
             __pmaintext 0013               __pintentry 0004                ?_initUART 0070  
                __ptext1 00BF                  __ptext2 0068                  __ptext3 0083  
                __ptext4 00AF                  __ptext5 009B                  __ptext6 0044  
   end_of_initialization 000F               ??_initUART 0074                _RCSTAbits 0018  
              _PORTAbits 0005                _PORTBbits 0006                _TXSTAbits 0098  
              _ComSerial 009B      start_initialization 000F              __end_of_isr 0068  
             ?_ComSerial 0070                ___latbits 0002          setupINTOSC@IRCF 0074  
      interrupt_function 0004                 _PIR1bits 000C              ??_ComSerial 0074  
          ??_setupINTOSC 0074            ??_setup_portb 0074      __end_of_setupINTOSC 0083  
               _initUART 00AF      __end_of_setup_portb 00CA               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F              _setupINTOSC 0068  
            _setup_portb 00BF  
